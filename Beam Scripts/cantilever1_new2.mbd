# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-web/documentation/examples/cantilever1,v 1.4 2009/07/04 17:36:08 masarati Exp $

/*
Notes:
 - NUmerical Integration
 - Time array: 0:1e-3:1 with max itrations of 10 and tolerance 1e-6
 - Read directly by the driver program
 - "initial value": Formulated as Differential-Algebraic Equations (DAE)
*/
begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 1.e-3;

	max iterations: 10;
	tolerance: 1.e-6;
end: initial value;

/*
Control Data:
	The following is declared the elements blocks:
		- structural NODES (Types of a Node: structural, electric, abstract, parameter, hydraulic)
		- rigid BODIES,
		- joints,
		- beams,
		- forces.

	<item_list> ::= <item> [ , ... ]
	<item> ::= { rigid bodies | gravity | forces | beams | aerodynamic elements | loadable elements }
*/
begin: control data;

	structural nodes: # To simulate the motions of N rigid bodies, we need N structural nodes.
		+1    # clamped node
		+2    # other nodes
	;
	rigid bodies:
		+2    # mass of other nodes
	;
	joints:
		+1    # clamp
	;
	beams:
		+1    # the whole beam
	;
	forces:
		+1    # loads the beam
	;
end: control data;

set: real m = 1.;
set: real j = 1.e-2;
set: real L = .5;

begin: nodes;
  # structural: <node label>, dynamic or static, <position>, <orientation>, <velocity>, <angular velocity> ;
	structural: 1, static,
		null,
		eye,
		null,
		null;

	structural: 2, dynamic,
		L/2., 0., 0.,
		eye,
		null,
		null;

	structural: 3, dynamic,
		L, 0., 0.,
		eye,
		null,
		null;
end: nodes;

begin: elements;
	joint: 1, clamp, 1, node, node;

	beam3: 1,
		1, null,
		2, null,
		3, null,
		eye,
		linear elastic generic,
			diag, 1.e9, 1.e9, 1.e9, 1.e4, 1.e4, 1.e5,
		same,
		same,
		inertia,
			1., # mass per unit span
		position, 0., .2, .4, # center of mass offset (the first element must be zero); optional, only parsed if "position" keyword is present
#		diag, 2e-2, 1e-2, 1e-2, # inertia tensor per unit span, wrt/ the center of mass
#		same,
#		same,
#		same;  

	set: real initial_time = 0.;
	set: real frequency = 10./pi;
	set: real amplitude = 100.;
	set: real initial_value = 0.;
	force: 3, absolute,
		3,
		position, null,
		0., 0., 1.,
		array, 2,
			sine, initial_time, frequency, amplitude,
				forever, initial_value,
			cosine, initial_time+.1, frequency/2., amplitude,
				half, initial_value;
end: elements;
