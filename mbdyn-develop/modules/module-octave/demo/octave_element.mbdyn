# $Header$
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
#################################################################
##
## AUTHOR: Reinhard Resch <r.resch@secop.com>
##        Copyright (C) 2011(-2017) all rights reserved.
##
##        The copyright of this code is transferred
##        to Pierangelo Masarati and Paolo Mantegazza
##        for use in the software MBDyn as described
##        in the GNU Public License version 2.1
##
##################################################################

#{
# BEGIN OF MBDYN SECTION

# module load: "libmodule-octave.la";

set: real tau1 = 1e-10;
set: real tau2 = 0.1;

set: real f = 3;
set: real F0 = 130;
set: real r = 15.5;

set: real sx = 7500;
set: real sy = 4800;
set: real sz = 3200;
set: real ks = 0.003;

begin: data;
	problem: initial value; # the default
end: data;

begin: initial value;
	initial time: 0;
	final time: 1;
    time step: 0.002;
	max time step: 0.0005;
    min time step: 0.00001;
	strategy: factor, 0.8, 1, 1.25, 1, 3, 6;
#    derivatives coefficient: 1e-2;
    derivatives tolerance: 1e-5;
    derivatives max iterations: 10;
    output: counter;
#    output: iterations;
#    output: residual;
end: initial value;

begin: control data;
    structural nodes: 4;
    rigid bodies: 2;
    forces: 4;
    joints: 2;
    parameter nodes: 2;
	loadable elements: 4;
    use: loadable elements, in assembly;
    max iterations: 100;
    print: equation description, to file;
    make restart file: time, 0.1;
end: control data;

reference: 1,
    position, reference, global, 0.2, 0.5, 0.3,
    orientation, reference, global, 1, 0., 1., 0.,
                                    2, -1., 0., 0.,
    velocity, reference, global, null,
    angular velocity, reference, global, null;
    
begin: nodes;
    structural: 1, dynamic,
        position, reference, global, null,
        orientation, reference, global, eye,
        velocity, reference, global, null,
        angular velocity, reference, global, null, 
        accelerations, yes;

    structural: 2, dynamic displacement,
        position, reference, global, null,
        velocity, reference, global, null,
        accelerations, yes;

    structural: 3, static,
        position, reference, global, null,
        orientation, reference, global, eye,
        velocity, reference, global, null,
        angular velocity, reference, global, null;

    structural: 4, static displacement,
        position, reference, global, null,
        velocity, reference, global, null;
 /**/
    parameter: 1, element;
    parameter: 2, element;
end: nodes;

begin: elements;
    body: 1, 1, 
        1.4/10,
        null,
        diag, 0.01, 0.02, 0.03;

    body: 2, 2, 
        1.4/10;

	joint: 1, total pin joint,
			1,
				position,				reference, global, null,
				position orientation, 	reference, global, eye,
				rotation orientation, 	reference, global, eye,
			position, 			 reference, global, null,
			position orientation, reference, global, eye,
			rotation orientation, reference, global, eye,				
			position constraint, 
					inactive, 
					inactive, 
					inactive,
				component, const, 0.,
						    const, 0.,
						    const, 0.,
			orientation constraint,
					active,
					active,
					active,
				component, const, 0.,
						    const, 0.,
						    const, 0.,
            output, no;

	joint: 2, total pin joint,
			3,
				position,				reference, global, null,
				position orientation, 	reference, global, eye,
				rotation orientation, 	reference, global, eye,
			position, 			 reference, global, null,
			position orientation, reference, global, eye,
			rotation orientation, reference, global, eye,				
			position constraint, 
					inactive, 
					inactive, 
					inactive,
				component, const, 0.,
						    const, 0.,
						    const, 0.,
			orientation constraint,
					active,
					active,
					active,
				component, const, 0.,
						    const, 0.,
						    const, 0.,
            output, no;
/**/
    force: 1, absolute, 1, position, reference, node, null, octave, "my_force", embed octave, yes;

    force: 2, absolute displacement, 2, octave, "my_force", embed octave, yes;

    force: 3, absolute, 3, position, reference, node, null, octave, "my_force", embed octave, yes;

    force: 4, absolute displacement, 4, octave, "my_force", embed octave, yes;
/**/
    user defined: 1, octave, "MyElem1", node1, 1,
                                        offset, reference, 1, null,
                                        orientation, reference, 1, eye,
                                        stiffness x, sx, 
                                        stiffness y, sy, 
                                        stiffness z, sz,
                                        damping coefficient, ks,
                                        force value, time,
                                        force direction, 1., 0.5, 0.3,
                                        drive1, 4.,
                                        drive2, 5.,
                                        output, yes;

    bind: 1, user defined, 1, string, "X2";
    bind: 1, user defined, 2, string, "XP2";

    user defined: 2, octave, "MyElem1", node1, 2,
                                        offset, reference, 1, null,
                                        orientation, reference, 1, eye,
                                        stiffness x, sx, 
                                        stiffness y, sy, 
                                        stiffness z, sz,
                                        damping coefficient, ks,
                                        force value, 0.,
                                        force direction, 1., 0.5, 0.3,
                                        drive1, 0.,
                                        drive2, 1.,
                                        output, yes;

    user defined: 3, octave, "MyElem1", node1, 3,
                                        offset, reference, 1, null,
                                        orientation, reference, 1, eye,
                                        stiffness x, sx, 
                                        stiffness y, sy, 
                                        stiffness z, sz,
                                        damping coefficient, ks,
                                        force value, 0.,
                                        force direction, 1., 0.5, 0.3,
                                        drive1, 2.,
                                        drive2, 3.,
                                        output, yes;

    user defined: 4, octave, "MyElem1", node1, 4,
                                        offset, reference, 1, null,
                                        orientation, reference, 1, eye,
                                        stiffness x, sx, 
                                        stiffness y, sy, 
                                        stiffness z, sz,
                                        damping coefficient, ks,
                                        force value, 0.,
                                        force direction, 1., 0.5, 0.3,
                                        string value, "string 1",
                                        bool value, 1,
                                        int value, 17,
                                        real value, 1.5,
                                        string with delimiter, [string with delimiters 1],
                                        drive1, sine, 0., 2*pi*15, 1., forever, 0.,
                                        drive2, ginac, symbol, "x", "sin(2*3.141592654*15*x)",
                                        output, yes;
/**/
end: elements;
#} 
# END OF MBDYN SECTION

#/* BEGIN OF OCTAVE SECTION
printf("mboct: embed octave is enabled!\n");

function F = my_force(t)
    global f;
    global F0;
    global tau1;
    global tau2;
    F = (1 - exp(-t/tau1) ) * exp(-t/tau2) * F0 * [ sin(2*pi*f*t); 
               cos(2*pi*f*t); 
               0 ];
endfunction

#*/ END OF OCTAVE SECTION
