# $Header$

module load: "libmodule-imu";

begin: data;
	integrator: multistep;
end: data;

begin: multistep;
	initial time: 0.;
	final time: 2.;
	time step: 1.e-3;

	tolerance: 1e-6;
	max iterations: 100;

	derivatives tolerance: 1e6;
	derivatives max iterations: 10;
	derivatives coefficient: 1e-12;

	nonlinear solver: newton raphson, modified, 5, keep jacobian;

	method: ms, .6;

	output: iterations;
	# output: residual;
end: multistep;

begin: control data;
	structural nodes: 1;
	rigid bodies: 1;
	loadable elements: 1;

	file drivers: 1;

	skip initial joint assembly;
end: control data;

begin: nodes;
	structural: 1, dynamic,
		null,
		eye,
		null,
		null;
end: nodes;

begin: drivers;
	file: 1, stream,
                stream drive name, "IMUOUT",
                path, "./mbdyn.imu.sock",
		no signal,
		receive first, no,
		timeout, 1.5,
                6;
end: drivers;

begin: elements;
	body: 1, 1, 1., null, eye, scale, 1e-2;
	user defined: 1, imu constraint,
		1,
		position, null,
		orientation, eye,
		component,
			file, 1, /* channel */ 1,
			file, 1, /* channel */ 2,
			file, 1, /* channel */ 3,
		component,
			file, 1, /* channel */ 4,
			file, 1, /* channel */ 5,
			file, 1, /* channel */ 6,
		output, yes;
end: elements;

# vim:ft=mbd
