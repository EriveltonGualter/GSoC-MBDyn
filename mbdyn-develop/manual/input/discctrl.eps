%!PS-Adobe-2.0 EPSF-2.0
%%Title: discctrl.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Sun Apr 12 18:28:04 2009
%%For: masarati@odino.intra.sys-net.it (Pierangelo Masarati)
%%BoundingBox: 0 0 401 271
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 271 moveto 0 0 lineto 401 0 lineto 401 271 lineto closepath clip newpath
-3.8 459.1 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 51
% Polyline
n 975 7500 m 1425 7500 l 1425 7650 l 975 7650 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 65.00 500.00] PATmp PATsp ef gr PATusp 
% Polyline
n 5775 7500 m 6225 7500 l 6225 7650 l 5775 7650 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 385.00 500.00] PATmp PATsp ef gr PATusp 
% Polyline
7.500 slw
n 975 7500 m
 1425 7500 l gs col0 s gr 
% Polyline
n 1200 6300 m 1200 6600 l 975 6675 l 1425 6825 l 975 6975 l 1425 7125 l
 1200 7200 l
 1200 7500 l gs col0 s gr 
% Polyline
n 6000 6300 m 6000 6600 l 5775 6675 l 6225 6825 l 5775 6975 l 6225 7125 l
 6000 7200 l
 6000 7500 l gs col0 s gr 
% Ellipse
n 1200 6000 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 6000 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2700 6000 75 75 0 360 DrawEllipse gs col0 s gr

% Polyline
n 2325 5025 m 3075 5025 l 3075 5475 l 2325 5475 l
 cp gs col0 s gr 
% Polyline
n 4200 5025 m 4950 5025 l 4950 5475 l 4200 5475 l
 cp gs col0 s gr 
% Polyline
n 5775 7500 m
 6225 7500 l gs col0 s gr 
% Polyline
gs  clippath
2670 5040 m 2730 5040 l 2730 4889 l 2700 5009 l 2670 4889 l cp
eoclip
n 1500 4800 m 2700 4800 l
 2700 5025 l gs col0 s gr gr

% arrowhead
n 2670 4889 m 2700 5009 l 2730 4889 l 2670 4889 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2670 5940 m 2730 5940 l 2730 5789 l 2700 5909 l 2670 5789 l cp
eoclip
n 2700 5475 m
 2700 5925 l gs col0 s gr gr

% arrowhead
n 2670 5789 m 2700 5909 l 2730 5789 l 2670 5789 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1485 5970 m 1485 6030 l 1636 6030 l 1516 6000 l 1636 5970 l cp
eoclip
n 2625 6000 m
 1500 6000 l gs col0 s gr gr

% arrowhead
n 1636 5970 m 1516 6000 l 1636 6030 l 1636 5970 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4545 5040 m 4605 5040 l 4605 4889 l 4575 5009 l 4545 4889 l cp
eoclip
n 5700 4800 m 4575 4800 l
 4575 5025 l gs col0 s gr gr

% arrowhead
n 4545 4889 m 4575 5009 l 4605 4889 l 4545 4889 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2760 5970 m 2760 6030 l 2911 6030 l 2791 6000 l 2911 5970 l cp
eoclip
n 4575 5475 m 4575 6000 l
 2775 6000 l gs col0 s gr gr

% arrowhead
n 2911 5970 m 2791 6000 l 2911 6030 l 2911 5970 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3330 6450 m 3225 6450 3225 6870 105 arcto 4 {pop} repeat
  3225 6975 3945 6975 105 arcto 4 {pop} repeat
  4050 6975 4050 6555 105 arcto 4 {pop} repeat
  4050 6450 3330 6450 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [15 45] 45 sd
gs  clippath
1170 5715 m 1230 5715 l 1230 5564 l 1200 5684 l 1170 5564 l cp
eoclip
n 1200 3150 m
 1200 5700 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1170 5564 m 1200 5684 l 1230 5564 l 1170 5564 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [15 45] 45 sd
gs  clippath
5970 5715 m 6030 5715 l 6030 5564 l 6000 5684 l 5970 5564 l cp
eoclip
n 6000 3150 m
 6000 5700 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 5970 5564 m 6000 5684 l 6030 5564 l 5970 5564 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
gs  clippath
929 6166 m 895 6116 l 770 6200 l 887 6159 l 803 6250 l cp
eoclip
n 450 6450 m
 900 6150 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 803 6250 m 887 6159 l 770 6200 l 803 6250 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 180 6375 m 75 6375 75 6795 105 arcto 4 {pop} repeat
  75 6900 345 6900 105 arcto 4 {pop} repeat
  450 6900 450 6480 105 arcto 4 {pop} repeat
  450 6375 180 6375 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
2 slj
 [60] 0 sd
gs  clippath
3240 6780 m 3240 6720 l 3089 6720 l 3209 6750 l 3089 6780 l cp
eoclip
n 1425 6225 m 1427 6227 l 1432 6230 l 1440 6236 l 1453 6246 l 1471 6259 l
 1493 6275 l 1520 6294 l 1550 6315 l 1582 6338 l 1616 6362 l
 1650 6386 l 1684 6410 l 1718 6433 l 1750 6455 l 1780 6476 l
 1809 6495 l 1836 6513 l 1862 6529 l 1886 6544 l 1909 6558 l
 1931 6570 l 1952 6582 l 1972 6593 l 1993 6603 l 2013 6613 l
 2036 6623 l 2059 6633 l 2083 6643 l 2107 6652 l 2132 6660 l
 2157 6668 l 2183 6676 l 2209 6683 l 2235 6690 l 2262 6696 l
 2289 6702 l 2316 6707 l 2343 6712 l 2370 6717 l 2397 6720 l
 2423 6724 l 2449 6727 l 2475 6730 l 2500 6732 l 2525 6734 l
 2550 6736 l 2575 6738 l 2598 6739 l 2622 6740 l 2646 6741 l
 2671 6742 l 2697 6743 l 2725 6744 l 2755 6745 l 2787 6746 l
 2821 6746 l 2857 6747 l 2895 6747 l 2935 6748 l 2976 6748 l
 3018 6749 l 3058 6749 l 3097 6749 l 3132 6750 l 3161 6750 l
 3186 6750 l
 3225 6750 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 3089 6780 m 3209 6750 l 3089 6720 l 3089 6780 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
 [60] 0 sd
gs  clippath
3572 6469 m 3631 6460 l 3610 6310 l 3598 6434 l 3550 6319 l cp
eoclip
n 5700 6000 m 5699 5999 l 5697 5998 l 5693 5995 l 5687 5991 l 5679 5986 l
 5669 5980 l 5657 5972 l 5643 5964 l 5627 5955 l 5610 5946 l
 5590 5937 l 5569 5927 l 5545 5917 l 5519 5906 l 5488 5896 l
 5454 5885 l 5416 5873 l 5372 5862 l 5325 5850 l 5284 5841 l
 5244 5833 l 5207 5825 l 5174 5819 l 5146 5813 l 5122 5809 l
 5103 5805 l 5087 5802 l 5075 5799 l 5065 5797 l 5057 5795 l
 5050 5794 l 5042 5792 l 5034 5791 l 5023 5789 l 5010 5788 l
 4993 5786 l 4971 5784 l 4943 5782 l 4910 5780 l 4871 5778 l
 4827 5777 l 4777 5775 l 4725 5775 l 4676 5775 l 4629 5776 l
 4585 5778 l 4545 5779 l 4511 5781 l 4481 5782 l 4455 5783 l
 4434 5784 l 4416 5785 l 4402 5786 l 4389 5786 l 4379 5787 l
 4369 5788 l 4359 5788 l 4348 5789 l 4337 5790 l 4323 5792 l
 4306 5795 l 4287 5798 l 4263 5802 l 4236 5807 l 4205 5813 l
 4170 5820 l 4131 5829 l 4091 5839 l 4050 5850 l 4000 5865 l
 3955 5881 l 3917 5894 l 3886 5906 l 3862 5916 l 3845 5923 l
 3832 5928 l 3823 5932 l 3817 5935 l 3812 5938 l 3808 5940 l
 3804 5944 l 3797 5949 l 3789 5956 l 3777 5967 l 3762 5980 l
 3744 5998 l 3722 6020 l 3698 6046 l 3675 6075 l 3652 6109 l
 3633 6143 l 3619 6175 l 3608 6206 l 3600 6235 l 3595 6264 l
 3592 6291 l 3591 6317 l 3591 6342 l 3591 6366 l 3593 6388 l
 3595 6407 l 3596 6423 l
 3600 6450 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 3550 6319 m 3598 6434 l 3610 6310 l 3550 6319 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
 [60] 0 sd
gs  clippath
5808 6154 m 5758 6120 l 5673 6245 l 5766 6163 l 5722 6278 l cp
eoclip
n 4050 6750 m 4051 6750 l 4054 6751 l 4060 6751 l 4068 6752 l 4079 6754 l
 4093 6756 l 4110 6758 l 4129 6760 l 4151 6762 l 4174 6764 l
 4199 6766 l 4226 6767 l 4255 6769 l 4285 6769 l 4317 6769 l
 4352 6769 l 4390 6767 l 4432 6765 l 4476 6761 l 4525 6756 l
 4575 6750 l 4622 6743 l 4666 6736 l 4708 6729 l 4744 6723 l
 4776 6717 l 4802 6712 l 4824 6708 l 4842 6704 l 4856 6701 l
 4868 6698 l 4878 6696 l 4888 6694 l 4897 6691 l 4907 6689 l
 4918 6685 l 4932 6681 l 4949 6676 l 4969 6670 l 4994 6662 l
 5023 6653 l 5057 6642 l 5094 6629 l 5134 6615 l 5175 6600 l
 5222 6581 l 5264 6563 l 5300 6547 l 5329 6533 l 5351 6522 l
 5367 6513 l 5378 6507 l 5385 6501 l 5390 6497 l 5394 6494 l
 5397 6490 l 5401 6486 l 5407 6480 l 5415 6473 l 5428 6463 l
 5444 6451 l 5465 6436 l 5491 6418 l 5520 6397 l 5550 6375 l
 5586 6347 l 5618 6321 l 5645 6298 l 5668 6276 l 5688 6257 l
 5705 6239 l 5720 6222 l 5733 6206 l 5744 6192 l 5754 6179 l
 5762 6169 l
 5775 6150 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 5722 6278 m 5766 6163 l 5673 6245 l 5722 6278 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 180.00 scf sf
2625 5325 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
4500 5325 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
1575 6975 m
gs 1 -1 sc (k=1) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
6450 6975 m
gs 1 -1 sc (k=1) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
3600 6750 m
gs 1 -1 sc (f) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
150 6675 m
gs 1 -1 sc (fe) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2025 5850 m
gs 1 -1 sc (uc) col0 sh gr
% Ellipse
n 6000 3600 300 300 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 1200 3600 300 300 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 1200 4800 300 300 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 6000 4800 300 300 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

/Times-Roman-iso ff 180.00 scf sf
975 3600 m
gs 1 -1 sc (uk-2) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
975 4800 m
gs 1 -1 sc (uk-1) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
975 6000 m
gs 1 -1 sc (uk) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5775 4800 m
gs 1 -1 sc (yk-1) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5775 6000 m
gs 1 -1 sc (yk) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5775 3600 m
gs 1 -1 sc (yk-2) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
