# $Header$
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#===============================================================================
# Title:	Example command file for dynamic loads solution
# Author:	Pierangelo Masarati <pierangelo.masarati at polimi.it>
# Date:		July-August 2008, during a visit to EDF (LaMSID at Clamart, F)

#===============================================================================
#===============================================================================
#===============================================================================
# Example command file for dynamic loads generation
#===============================================================================
#===============================================================================
#===============================================================================

#===============================================================================
# Path to macro
path_to_cms_macro = '/home/masarati/Lavoro/mbdyn/ASTER/2008-07-17-RomanelliSerioli/Code_Aster/TUTORIAL/cms';

#===============================================================================
#===============================================================================
#===============================================================================
# set path to macro
import sys
sys.path.append(path_to_cms_macro);
from dynforces import AFFE_DYNFORCES

#===============================================================================
# NOTE: PAR_LOT needs to be 'NON' to allow run-time manipulation
# NOTE: not sure about DEBUG...
DEBUT( PAR_LOT = 'NON', DEBUG = _F( SDVERI = 'OUI' ) );

#===============================================================================
# load mesh
ma = LIRE_MAILLAGE( );

#===============================================================================
# associate mesh to modeling
mo = AFFE_MODELE( MAILLAGE = ma,
                  AFFE = _F( GROUP_MA = 'TOUT_MA',
                             PHENOMENE = 'MECANIQUE',
                             MODELISATION = 'POU_D_E') );

caele = AFFE_CARA_ELEM( MODELE = mo,
                       POUTRE = _F( GROUP_MA = 'TOUT_MA',
                                    SECTION = 'CERCLE',
                                    CARA = ( 'R', 'EP' ),
                                    VALE = ( 0.15,  0.03 ) ) );

#===============================================================================
# associate material properties to modeling
mat = DEFI_MATERIAU( ELAS = _F( E = 2.1E+11,
                                NU = 0.3,
                                RHO = 7800.0 ) );
chmat = AFFE_MATERIAU( MAILLAGE = ma,
                       AFFE = _F( GROUP_MA = 'TOUT_MA',
                                  MATER = mat ) );

chbc = AFFE_CHAR_MECA(	MODELE = mo,
			DDL_IMPO = ( _F( GROUP_NO = 'CLAMP',
                                        DX = 0., DY = 0., DZ = 0.,
                                        DRX = 0., DRY = 0., DRZ = 0. ) ) );

#===============================================================================
matlock = CALC_MATR_ELEM(	MODELE = mo,
				CHARGE = chbc,
				CARA_ELEM = caele,
				CHAM_MATER = chmat,
				OPTION = 'RIGI_MECA' );

matlocm = CALC_MATR_ELEM(	MODELE = mo,
				CHARGE = chbc,
				CARA_ELEM = caele,
				CHAM_MATER = chmat,
				OPTION = 'MASS_MECA' );

num = NUME_DDL( MATR_RIGI = matlock );

matassk = ASSE_MATRICE(	MATR_ELEM = matlock,
			NUME_DDL = num );
matassm = ASSE_MATRICE(	MATR_ELEM = matlocm,
			NUME_DDL = num );

chdf = AFFE_DYNFORCES(	MODELE = mo,
			MATR_MASS = matassm,
			MAILLAGE = ma,
			FICHIER = "/home/masarati/Lavoro/mbdyn/ASTER/2008-07-17-RomanelliSerioli/Code_Aster/TUTORIAL/cms/dynforces.frc" );

#===============================================================================
sol = MECA_STATIQUE(	MODELE = mo,
			CHAM_MATER = chmat,
			CARA_ELEM = caele,
			EXCIT = (	_F( CHARGE = chbc ),
					_F( CHARGE = chdf ) ) );

#===============================================================================
IMPR_RESU( RESU = _F( RESULTAT = sol, TOUT_PARA = 'OUI', TOUT_CHAM = 'OUI' ) )
#===============================================================================

FIN();

