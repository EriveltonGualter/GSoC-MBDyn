/* 
 * MBDyn (C) is a multibody analysis code. 
 * http://www.mbdyn.org
 *
 * Copyright (C) 1996-2017
 *
 * Pierangelo Masarati	<masarati@aero.polimi.it>
 * Paolo Mantegazza	<mantegazza@aero.polimi.it>
 *
 * Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
 * via La Masa, 34 - 20156 Milano, Italy
 * http://www.aero.polimi.it
 *
 * Changing this copyright notice is forbidden.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation (version 2 of the License).
 * 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/*
 * This file controls the inverse pendulum modeled in "pendulum";
 * it is equivalent to the control action performed by Simulink
 * using the pendulum.mdl controller model.
 *
 * Part of the SimulinkInterface test suite.
 */

begin: data;
	integrator: multistep;
end: data;

set: real tf = 80;
set: real dt = 1.e-3;

begin: multistep;
	initial time: 0.;
	final time: tf;
	time step: dt;

	tolerance: 1.e-6;
	max iterations: 10;

	method: ms, .6;
end: multistep;

begin: control data;
	# default output: none;
	abstract nodes: 1;
	genels: 1;
	forces: 1;
	output elements: 1;
        file drivers: 1;
end: control data;

set: real OMEGA = 1.e-3;

begin: nodes;
	abstract: 1;
end: nodes;

begin: drivers;
        file: 1, stream,
        	stream drive name, "MBXOUT",
        	create, no,
		# path, "/tmp/mbdyn.pendulum.in.sock",
		port, 10011, host, "localhost",
		# receive first, no,
		# echo, "mov.in",
		2;
end: drivers;

begin: elements;
	stream output: 1,
		stream name, "MBXINN",
		create, no,
		# path, "../tmp/mbdyn.out.pendulum.sock",
		port, 8005, host, "localhost",
		# echo, "frc.out",
		values, 1,
			drive, node, 1, abstract, string, "x", direct;		# force

	genel: 1, spring support,
		1, abstract, algebraic,
			linear elastic, 1.;
	force: 1, abstract,
		1, abstract, 	# applied to abstract node
		array, 2,
		file,
			1,		# read input from file 1
			1,		# use channel 1
			amplitude, 200,
		file,
			1,		# read input from file 1
			2,		# use channel 2
			amplitude, 10;
end: elements;

# vim:ft=mbd
